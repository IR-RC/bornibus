#!/usr/bin/env python3

import os, sys
import time

from argparse import ArgumentParser

from common.serialtalks    import SerialTalks
from common.modulesrouter  import ModulesRouter
from common.camerastreamer import CameraStreamer


def getuuid(args):
	module = SerialTalks(args.port)
	try:
		module.connect(args.timeout)
		uuid = module.getuuid(args.timeout)
		if isinstance(uuid, str):
			print(uuid)
		else:
			raise ValueError('\'{}\' object is not a valid UUID'.format(type(uuid)))
	except KeyboardInterrupt:
		pass
	finally:
		module.disconnect()


def getlogs(args):
	module = SerialTalks(args.port)
	try:
		module.connect(args.timeout)
		while True:
			print(module.getout(), end='')
			print(module.geterr(), end='')
			time.sleep(1 / args.frequency)
	except KeyboardInterrupt:
		pass
	finally:
		module.disconnect()


def modulesrouter(args):
	router = ModulesRouter(password=args.password)
	while True:
		try:
			if not router.is_connected:
				router.connect(None)
			else:
				router.sleep_until_disconnected()
		except KeyboardInterrupt:
			router.disconnect()
			break
		except Exception as e:
			sys.stderr.write('{}: {}\n'.format(type(e).__name__, e))
			continue


def camerastreamer(args):
	camera = CameraStreamer(password=args.password)
	while True:
		try:
			if not camera.is_connected:
				camera.connect(None)
			else:
				camera.capture()
		except KeyboardInterrupt:
			camera.disconnect()
			break
		except Exception as e:
			sys.stderr.write('{}: {}\n'.format(type(e).__name__, e))
			continue


parser = ArgumentParser()
subparsers = parser.add_subparsers()

getuuid_parser = subparsers.add_parser('getuuid')
getuuid_parser.add_argument('port', type=str)
getuuid_parser.add_argument('-t', '--timeout', type=float, default=2)
getuuid_parser.set_defaults(func=getuuid)

getlogs_parser = subparsers.add_parser('getlogs')
getlogs_parser.add_argument('port', type=str)
getlogs_parser.add_argument('-t', '--timeout', type=float, default=2)
getlogs_parser.add_argument('-f', '--frequency', type=int, default=60)
getlogs_parser.set_defaults(func=getlogs)

modulesrouter_parser = subparsers.add_parser('modulesrouter')
modulesrouter_parser.add_argument('-p', '--password', type=str, default=None)
modulesrouter_parser.set_defaults(func=modulesrouter)

camerastreamer_parser = subparsers.add_parser('camerastreamer')
camerastreamer_parser.add_argument('-p', '--password', type=str, default=None)
camerastreamer_parser.set_defaults(func=camerastreamer)

args = parser.parse_args()
args.func(args)

