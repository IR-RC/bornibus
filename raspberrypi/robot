#!/usr/bin/env python3

import os, sys
import time

from argparse import ArgumentParser, FileType

from common.serialtalks   import SerialTalks
from common.modulesrouter import ModulesRouter


def getuuid(args):
	for port in args.ports:
		module = SerialTalks(port)
		try:
			module.connect(args.timeout)
			print(module.getuuid())
			module.disconnect()
		except KeyboardInterrupt:
			break
		except Exception as e:
			sys.stderr.write(str(e) + '\n')


def getlogs(args):
	module = SerialTalks(args.port)
	try:
		module.connect(args.timeout)
		while True:
			print(module.getout(), end='')
			print(module.geterr(), end='')
			time.sleep(1 / args.frequency)
	except KeyboardInterrupt:
		pass
	except Exception as e:
		sys.stderr.write(str(e) + '\n')
	module.disconnect()


def modulesrouter(args):
	router = ModulesRouter(password=args.password)
	while True:
		try:
			router.connect(args.timeout)
		except KeyboardInterrupt:
			break
		except Exception as e:
			sys.stderr.write(str(e) + '\n')
	router.disconnect()


parser = ArgumentParser()
subparsers = parser.add_subparsers()

getuuid_parser = subparsers.add_parser('getuuid')
getuuid_parser.add_argument('ports', type=str, nargs='+')
getuuid_parser.add_argument('-t', '--timeout', type=float, default=2)
getuuid_parser.set_defaults(func=getuuid)

getlogs_parser = subparsers.add_parser('getlogs')
getlogs_parser.add_argument('port', type=str)
getlogs_parser.add_argument('-t', '--timeout', type=float, default=2)
getlogs_parser.add_argument('-f', '--frequency', type=int, default=60)
getlogs_parser.set_defaults(func=getlogs)

modulesrouter_parser = subparsers.add_parser('modulesrouter')
modulesrouter_parser.add_argument('-p', '--password', type=str, default=None)
modulesrouter_parser.add_argument('-t', '--timeout', type=float, default=2)
modulesrouter_parser.set_defaults(func=modulesrouter)

args = parser.parse_args()
args.func(args)

